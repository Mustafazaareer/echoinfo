name: build image and deploy

on:
  push:
    branches: ["main"]

jobs:
  do:
    runs-on: ubuntu-latest
    concurrency: build-docker-and-deploy
    steps:
      - uses: actions/checkout@v3
      - name: Set image version (tag)
        id: image_version
        run: echo "githash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.CR_PAT }}
      # - name: Build and Push Container
      #   uses: docker/build-push-action@v4
      #   with:
      #     platforms: linux/amd64
      #     context: .
      #     push: true
      #     tags: |
      #       ghcr.io/khaledez/echoinfo:latest
      #       ghcr.io/khaledez/echoinfo:${{ steps.image_version.outputs.githash }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      - name: setup ssh agent
        run: |
          mkdir -p $HOME/.ssh
          echo '${{ secrets.SSH_KEY }}' > $HOME/.ssh/github.pem
          chmod 600 $HOME/.ssh/github.pem
          cat <<EOF > $HOME/.ssh/config
          Host ${{ vars.INSTANCE_IP }}
            HostName ${{ vars.INSTANCE_IP }}
            IdentityFile      ~/.ssh/github.pem
            StrictHostKeyChecking no
            IdentitiesOnly    yes
            ControlMaster     auto
            ControlPath       ~/.ssh/control-%C
            ControlPersist    yes
          EOF
          
      - name: login and run
        run: |
          export DOCKER_HOST=ssh://github@${{ vars.INSTANCE_IP }}
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker run -d -e PORT=80 -p 80:80 ghcr.io/khaledez/echoinfo:latest

      - name: cleanup
        if: always()
        run: rm -rf $HOME/.ssh/github.pem
